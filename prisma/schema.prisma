// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Supermarket {
  id        Int       @id @default(autoincrement())
  name      String
  location  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Product {
  id                  Int                   @id @default(autoincrement())
  name                String
  price               Float
  supermarket         Supermarket           @relation(fields: [supermarketId], references: [id])
  supermarketId       Int
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Tag                 Tag?                  @relation(fields: [tagId], references: [id])
  tagId               Int?
  ShoppingCartProduct ShoppingCartProduct[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  ShoppingCart ShoppingCart[]
}

model ShoppingCart {
  id                  Int                   @id @default(autoincrement())
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  ShoppingCartProduct ShoppingCartProduct[]
  User                User                  @relation(fields: [userId], references: [id])
  userId              Int
}

model ShoppingCartProduct {
  id             Int          @id @default(autoincrement())
  quantity       Int
  product        Product      @relation(fields: [productId], references: [id])
  productId      Int
  shoppingCart   ShoppingCart @relation(fields: [shoppingCartId], references: [id])
  shoppingCartId Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
